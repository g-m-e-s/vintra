version: '3.8'

services:
  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - VITE_API_URL=http://localhost:5000/api
    depends_on:
      - backend-node
    command: npm run dev

  # Backend Node.js (Express)
  backend-node:
    build:
      context: ./backend-node
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend-node:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
      - PYTHON_API_URL=http://backend-python:8000
    env_file:
      - .env
    depends_on:
      - backend-python

  # Backend Python (FastAPI)
  backend-python:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend-python:/app
    environment:
      - GCP_PROJECT_ID=${GOOGLE_CLOUD_PROJECT}
      - GCP_REGION=${VERTEX_AI_LOCATION}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - LOCAL_DEVELOPMENT=true
    env_file:
      - .env
    depends_on:
      - neo4j

  # Neo4j Database
  neo4j:
    image: neo4j:4.4
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_conf:/conf
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=2G

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_conf:
